---
if (Astro.locals.user) {
    // Si l'utilisateur est déjà connecté, on le redirige vers la page d'accueil
    return Astro.redirect("/");
}
---
<html lang="en" data-theme="light">
    <head>
        <title>Inscription - SVG Generator</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link href="https://cdn.jsdelivr.net/npm/daisyui@3.8.0/dist/full.css" rel="stylesheet" type="text/css" />
        <script src="https://cdn.tailwindcss.com"></script>
    </head>
    <body class="min-h-screen flex items-center justify-center bg-base-200 p-4">
        <div class="card w-full max-w-sm sm:max-w-md shadow-2xl bg-base-100">
            <div class="card-body p-4 sm:p-6 md:p-8">
                <div class="flex justify-center mb-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 sm:h-16 sm:w-16 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z" />
                    </svg>
                </div>
                <h1 class="card-title text-2xl sm:text-3xl mb-4 justify-center">Inscription</h1>
                <p class="text-center text-sm sm:text-base text-base-content/70 mb-4">Créez votre compte gratuitement</p>
                <!-- Formulaire d'inscription -->
                <form id="signup-form" class="flex flex-col gap-3 sm:gap-4">
                    <div class="form-control">
                        <label class="label">
                            <span class="label-text text-sm sm:text-base">Nom (optionnel)</span>
                        </label>
                        <input 
                            type="text" 
                            name="name" 
                            placeholder="Votre nom" 
                            class="input input-bordered w-full text-sm sm:text-base" 
                        />
                    </div>
                    <div class="form-control">
                        <label class="label">
                            <span class="label-text text-sm sm:text-base">Email</span>
                        </label>
                        <input 
                            type="email" 
                            name="email" 
                            placeholder="votre@email.com" 
                            required 
                            class="input input-bordered w-full text-sm sm:text-base" 
                        />
                    </div>
                    <div class="form-control">
                        <label class="label">
                            <span class="label-text text-sm sm:text-base">Mot de passe</span>
                            <span class="label-text-alt text-xs">Min. 8 caractères</span>
                        </label>
                        <input 
                            type="password" 
                            name="password" 
                            placeholder="••••••••" 
                            required 
                            minlength="8"
                            class="input input-bordered w-full text-sm sm:text-base" 
                        />
                    </div>
                    <div class="form-control">
                        <label class="label">
                            <span class="label-text text-sm sm:text-base">Confirmer le mot de passe</span>
                        </label>
                        <input 
                            type="password" 
                            name="passwordConfirm" 
                            placeholder="••••••••" 
                            required 
                            class="input input-bordered w-full text-sm sm:text-base" 
                        />
                    </div>
                    <button type="submit" class="btn btn-primary w-full text-sm sm:text-base" id="submit-btn">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z" />
                        </svg>
                        Créer un compte
                    </button>
                </form>
                
                <!-- Zone d'affichage du statut -->
                <div id="status" class="mt-3 sm:mt-4 text-center text-sm sm:text-base"></div>
                
                <!-- Lien vers la page de connexion -->
                <div class="divider text-xs sm:text-sm">OU</div>
                <div class="text-center">
                    <p class="text-xs sm:text-sm text-base-content/70 mb-2">Déjà un compte ?</p>
                    <a href="/login" class="btn btn-ghost btn-sm w-full sm:w-auto">
                        Se connecter
                    </a>
                </div>
            </div>
        </div>

        <script is:inline>
            // Gestion du thème
            const theme = localStorage.getItem('theme') || 'light';
            document.documentElement.setAttribute('data-theme', theme);
        </script>
    </body>
</html>

<script>
    //@ts-nocheck
    // On retire toute ancienne information utilisateur du stockage local
    localStorage.removeItem("user");
    
    const form = document.getElementById("signup-form");
    const status = document.getElementById("status");
    const submitBtn = document.getElementById("submit-btn");

    // Validation côté client pour confirmer les mots de passe
    const passwordInput = document.querySelector('input[name="password"]');
    const passwordConfirmInput = document.querySelector('input[name="passwordConfirm"]');

    function validatePasswords() {
        const password = passwordInput.value;
        const passwordConfirm = passwordConfirmInput.value;
        
        if (passwordConfirm && password !== passwordConfirm) {
            passwordConfirmInput.setCustomValidity("Les mots de passe ne correspondent pas");
        } else {
            passwordConfirmInput.setCustomValidity("");
        }
    }

    passwordInput.addEventListener("input", validatePasswords);
    passwordConfirmInput.addEventListener("input", validatePasswords);

    // Gestion de la soumission du formulaire
    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        
        const formData = new FormData(form);
        const password = formData.get("password");
        const passwordConfirm = formData.get("passwordConfirm");
        
        // Validation côté client
        if (password !== passwordConfirm) {
            status.innerHTML = '<p class="text-error">❌ Les mots de passe ne correspondent pas</p>';
            return;
        }

        if (password.length < 8) {
            status.innerHTML = '<p class="text-error">❌ Le mot de passe doit contenir au moins 8 caractères</p>';
            return;
        }

        // Désactiver le bouton pendant la requête
        submitBtn.disabled = true;
        submitBtn.textContent = "Création en cours...";
        status.innerHTML = '<p class="text-info">⏳ Création de votre compte...</p>';

        try {
            // Envoi des informations au serveur via l'API /api/signup
            const res = await fetch("/api/signup", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    email: formData.get("email"),
                    password: formData.get("password"),
                    passwordConfirm: formData.get("passwordConfirm"),
                    name: formData.get("name") || "",
                }),
                credentials: "include", // Permet d'inclure les cookies dans la requête
            });

            const resData = await res.json();

            // Traitement de la réponse
            if (res.ok) {
                localStorage.setItem("user", JSON.stringify(resData.user)); // Sauvegarde des infos utilisateur
                status.innerHTML = '<p class="text-success">✅ Compte créé avec succès !</p>';
                // Redirection vers la page d'accueil après un court délai
                setTimeout(() => {
                    window.location.href = "/";
                }, 1500);
            } else {
                status.innerHTML = `<p class="text-error">❌ ${resData.error || "Erreur lors de la création du compte"}</p>`;
            }
        } catch (error) {
            console.error("Erreur:", error);
            status.innerHTML = '<p class="text-error">❌ Une erreur est survenue. Veuillez réessayer.</p>';
        } finally {
            // Réactiver le bouton
            submitBtn.disabled = false;
            submitBtn.textContent = "Créer un compte";
        }
    });
</script>